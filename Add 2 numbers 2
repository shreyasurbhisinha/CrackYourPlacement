class Solution {
public:
ListNode* reverse(ListNode* head){
    ListNode*curr=head;
    ListNode* prev=nullptr;
    while(curr){
        ListNode* next=curr->next;
        curr->next=prev;
        prev=curr;
        curr=next;
    }
    return prev;
}

    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode*r1=reverse(l1);
        ListNode*r2=reverse(l2);
        l1=r1;
        l2=r2;
        int sum=0;
        int rem=0;
        ListNode*ans=new ListNode();
        while(l1||l2){
            if(l1){
                sum+=l1->val;
                l1=l1->next;
            }
            if(l2){
                sum+=l2->val;
                l2=l2->next;
            }
            ans->val=sum%10;
            rem=sum/10;
            ListNode*temp=new ListNode(rem);
            temp->next=ans;
            ans=temp;
            sum=rem;
        }
        return rem==0?ans->next:ans;

       

        
    }
};
